fitted = D %*% beta
residuals = Y - fitted
SS.tot = sum((Y - mean(Y))^2)
if(SS.tot == 0)
warning("Y is constant!\n")
SS.res = sum((Y - fitted)^2)
SS.reg = SS.tot - SS.res
R2 = SS.reg / SS.tot
#Return result
result = list(beta = beta,
fitted = fitted,
residuals = residuals,
R2 = R2,
hatdiag = diag(hat.matrix))
return(result)
}
mylm <- function(y,X){
Y = as.matrix(Y); Xnew = as.matrix(X)
# Check if numeric
if(!is.numeric(Y) | !is.numeric(Xnew))
stop("Y or X is not numeric!\n")
# Check for dimensions
dy = dim(Y) ; dx = dim(Xnew)
if(dy[2] != 1 | dy[1] != dx[1])
stop("Y or X has wrong dimensions\n")
# Check for ill conditioned elements, we can use is.finite to response only to finite real numbers
if(FALSE %in% is.finite(Y) | FALSE %in% is.finite(Xnew))
warning("Y or X is ill conditioned\n")
# Check if of full rank
D = cbind(1,Xnew)
DtD = t(D) %*% D
if(det(DtD) == 0)
stop("Design matrix is not full rank\n")
# Regressing
DtD.inv = solve(DtD)
hat.matrix = D %*% DtD.inv %*% t(D)
beta = DtD.inv %*% t(D) %*% Y
fitted = D %*% beta
residuals = Y - fitted
SS.tot = sum((Y - mean(Y))^2)
if(SS.tot == 0)
warning("Y is constant!\n")
SS.res = sum((Y - fitted)^2)
SS.reg = SS.tot - SS.res
R2 = SS.reg / SS.tot
# Return result
result = list(beta = beta,
fitted = fitted,
residuals = residuals,
R2 = R2,
hatdiag = diag(hat.matrix))
return(result)
}
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(residuals.value,fitted.value)
mylm <- function(y,X){
Y = as.matrix(Y); Xnew = as.matrix(X)
# Check if numeric
if(!is.numeric(Y) | !is.numeric(Xnew))
stop("Y or X is not numeric!\n")
# Check for dimensions
dy = dim(Y) ; dx = dim(Xnew)
if(dy[2] != 1 | dy[1] != dx[1])
stop("Y or X has wrong dimensions\n")
# Check for ill conditioned elements, we can use is.finite to response only to finite real numbers
if(FALSE %in% is.finite(Y) | FALSE %in% is.finite(Xnew))
warning("Y or X is ill conditioned\n")
# Check if of full rank
D = cbind(1,Xnew)
DtD = t(D) %*% D
if(det(DtD) == 0)
stop("Design matrix is not full rank\n")
# Regressing
DtD.inv = solve(DtD)
hat.matrix = D %*% DtD.inv %*% t(D)
beta = DtD.inv %*% t(D) %*% Y
fitted = D %*% beta
residuals = Y - fitted
SS.tot = sum((Y - mean(Y))^2)
if(SS.tot == 0)
warning("Y is constant!\n")
SS.res = sum((Y - fitted)^2)
SS.reg = SS.tot - SS.res
R2 = SS.reg / SS.tot
# Return result
result = list(beta = beta,
fitted = fitted,
residuals = residuals,
R2 = R2,
hatdiag = diag(hat.matrix))
return(result)
}
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=20)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.')
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='*')
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=16)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=20)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=20, col=68)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=20, col=34)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=20)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=1)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='#')
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='+')
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.')
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='*')
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=18)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=20)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
windows.options(width=10, height=10)
plot(fitted.value, residuals.value, pch=20)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
windows.options(width=15, height=12)
plot(fitted.value, residuals.value, pch=20)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
windows.options(width=1, height=12)
plot(fitted.value, residuals.value, pch=20)
par(pin=c(0.5, 0.3),mai=rep(0.1,4), omi=rep(0.01,4), mar=c(5,4,4,2))
plot(runif(100))
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=20)
residuals.value = results$residuals
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=20)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=20)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
# plot(fitted.value, residuals.value, pch=20)
knitr::opts_chunk$set(echo = TRUE)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
mylm <- function(y,X){
Y = as.matrix(Y); Xnew = as.matrix(X)
# Check if numeric
if(!is.numeric(Y) | !is.numeric(Xnew))
stop("Y or X is not numeric!\n")
# Check for dimensions
dy = dim(Y) ; dx = dim(Xnew)
if(dy[2] != 1 | dy[1] != dx[1])
stop("Y or X has wrong dimensions\n")
# Check for ill conditioned elements, we can use is.finite to response only to finite real numbers
if(FALSE %in% is.finite(Y) | FALSE %in% is.finite(Xnew))
warning("Y or X is ill conditioned\n")
# Check if of full rank
D = cbind(1,Xnew)
DtD = t(D) %*% D
if(det(DtD) == 0)
stop("Design matrix is not full rank\n")
# Regressing
DtD.inv = solve(DtD)
hat.matrix = D %*% DtD.inv %*% t(D)
beta = DtD.inv %*% t(D) %*% Y
fitted = D %*% beta
residuals = Y - fitted
SS.tot = sum((Y - mean(Y))^2)
if(SS.tot == 0)
warning("Y is constant!\n")
SS.res = sum((Y - fitted)^2)
SS.reg = SS.tot - SS.res
R2 = SS.reg / SS.tot
# Return result
result = list(beta = beta,
fitted = fitted,
residuals = residuals,
R2 = R2,
hatdiag = diag(hat.matrix))
return(result)
}
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch=20)
par(pin=c(0.5, 0.3),mai=rep(0.1,4), omi=rep(0.01,4), mar=c(5,4,4,2))
plot(runif(100))
knitr::opts_chunk$set(echo = TRUE)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.')
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.', cex=2)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.', cex=1.5)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.', cex=1.7)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.', cex=2.1)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.', cex=3)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.', cex=2.5)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.', cex=1)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
dev.new(width=5, height=4)
plot(fitted.value, residuals.value, pch='.', cex=1)
dev.off()
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.', cex=1)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.', cex=2)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.', cex=2.2)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.', cex=2.5)
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
fitted.value = results$fitted
residuals.value = results$residuals
plot(fitted.value, residuals.value, pch='.', cex=2)
knitr::opts_chunk$set(echo = TRUE)
mylm <- function(y,X){
Y = as.matrix(Y); Xnew = as.matrix(X)
# Check if numeric
if(!is.numeric(Y) | !is.numeric(Xnew))
stop("Y or X is not numeric!\n")
# Check for dimensions
dy = dim(Y) ; dx = dim(Xnew)
if(dy[2] != 1 | dy[1] != dx[1])
stop("Y or X has wrong dimensions\n")
# Check for ill conditioned elements.
# We can use is.finite to response only to finite real numbers
if(FALSE %in% is.finite(Y) | FALSE %in% is.finite(Xnew))
warning("Y or X is ill conditioned\n")
# Check if of full rank
D = cbind(1,Xnew)
DtD = t(D) %*% D
if(det(DtD) == 0)
stop("Design matrix is not full rank\n")
# Regressing
DtD.inv = solve(DtD)
hat.matrix = D %*% DtD.inv %*% t(D)
beta = DtD.inv %*% t(D) %*% Y
fitted = D %*% beta
residuals = Y - fitted
SS.tot = sum((Y - mean(Y))^2)
if(SS.tot == 0)
warning("Y is constant!\n")
SS.res = sum((Y - fitted)^2)
SS.reg = SS.tot - SS.res
R2 = SS.reg / SS.tot
# Return result
result = list(beta = beta,
fitted = fitted,
residuals = residuals,
R2 = R2,
hatdiag = diag(hat.matrix))
return(result)
}
mylm <- function(y,X){
Y = as.matrix(Y); Xnew = as.matrix(X)
# Check if numeric
if(!is.numeric(Y) | !is.numeric(Xnew))
stop("Y or X is not numeric!\n")
# Check for dimensions
dy = dim(Y) ; dx = dim(Xnew)
if(dy[2] != 1 | dy[1] != dx[1])
stop("Y or X has wrong dimensions\n")
# Check for ill conditioned elements.
# We can use is.finite to response only to finite real numbers
if(FALSE %in% is.finite(Y) | FALSE %in% is.finite(Xnew))
warning("Y or X is ill conditioned\n")
# Check if of full rank
D = cbind(1,Xnew)
DtD = t(D) %*% D
if(det(DtD) == 0)
stop("Design matrix is not full rank\n")
# Regressing
DtD.inv = solve(DtD)
hat.matrix = D %*% DtD.inv %*% t(D)
beta = DtD.inv %*% t(D) %*% Y
fitted = D %*% beta
residuals = Y - fitted
SS.tot = sum((Y - mean(Y))^2)
if(SS.tot == 0)
warning("Y is constant!\n")
SS.res = sum((Y - fitted)^2)
SS.reg = SS.tot - SS.res
R2 = SS.reg / SS.tot
# Return result
result = list(beta = beta,
fitted = fitted,
residuals = residuals,
R2 = R2,
hatdiag = diag(hat.matrix))
return(result)
}
data = read.table("HW2ex.txt")
shape = dim(data)
Y = data[,1]; X = data[,2:shape[2]]
results = mylm(Y,X)
plot(results$fitted, results$residuals, pch='.', cex=2)
